[{"C:\\Users\\adria\\TeamFit\\client\\src\\index.js":"1","C:\\Users\\adria\\TeamFit\\client\\src\\reportWebVitals.js":"2","C:\\Users\\adria\\TeamFit\\client\\src\\App.js":"3","C:\\Users\\adria\\TeamFit\\client\\src\\pages\\Home.js":"4","C:\\Users\\adria\\TeamFit\\client\\src\\components\\Header\\index.js":"5","C:\\Users\\adria\\TeamFit\\client\\src\\components\\Footer\\index.js":"6","C:\\Users\\adria\\TeamFit\\client\\src\\utils\\queries.js":"7","C:\\Users\\adria\\TeamFit\\client\\src\\components\\CommentList\\index.js":"8","C:\\Users\\adria\\TeamFit\\client\\src\\components\\CommentForm\\index.js":"9","C:\\Users\\adria\\TeamFit\\client\\src\\utils\\mutations.js":"10","C:\\Users\\adria\\TeamFit\\client\\src\\pages\\SingleChallenge.js":"11","C:\\Users\\adria\\TeamFit\\client\\src\\components\\ChallengeList\\index.js":"12","C:\\Users\\adria\\TeamFit\\client\\src\\components\\ChallengeForm\\index.js":"13","C:\\Users\\adria\\TeamFit\\client\\src\\pages\\Signup.js":"14","C:\\Users\\adria\\TeamFit\\client\\src\\pages\\Login.js":"15","C:\\Users\\adria\\TeamFit\\client\\src\\utils\\auth.js":"16","C:\\Users\\adria\\TeamFit\\client\\src\\components\\CategoryMenu\\index.js":"17","C:\\Users\\adria\\TeamFit\\client\\src\\utils\\actions.js":"18","C:\\Users\\adria\\TeamFit\\client\\src\\utils\\GlobalState.js":"19","C:\\Users\\adria\\TeamFit\\client\\src\\utils\\reducers.js":"20"},{"size":500,"mtime":1643628316356,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1643628316358,"results":"23","hashOfConfig":"22"},{"size":1450,"mtime":1643887720494,"results":"24","hashOfConfig":"22"},{"size":942,"mtime":1643888847674,"results":"25","hashOfConfig":"22"},{"size":1215,"mtime":1643707459533,"results":"26","hashOfConfig":"22"},{"size":632,"mtime":1643691453748,"results":"27","hashOfConfig":"22"},{"size":1108,"mtime":1643885649473,"results":"28","hashOfConfig":"22"},{"size":972,"mtime":1643628316351,"results":"29","hashOfConfig":"22"},{"size":1877,"mtime":1643692963567,"results":"30","hashOfConfig":"22"},{"size":1483,"mtime":1643874436416,"results":"31","hashOfConfig":"22"},{"size":1679,"mtime":1643712890871,"results":"32","hashOfConfig":"22"},{"size":1214,"mtime":1643887808808,"results":"33","hashOfConfig":"22"},{"size":2976,"mtime":1643692389459,"results":"34","hashOfConfig":"22"},{"size":2827,"mtime":1643874409369,"results":"35","hashOfConfig":"22"},{"size":2594,"mtime":1643706990967,"results":"36","hashOfConfig":"22"},{"size":757,"mtime":1643707258485,"results":"37","hashOfConfig":"22"},{"size":1156,"mtime":1643886623557,"results":"38","hashOfConfig":"22"},{"size":124,"mtime":1643817839116,"results":"39","hashOfConfig":"22"},{"size":563,"mtime":1643875994794,"results":"40","hashOfConfig":"22"},{"size":630,"mtime":1643875976202,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"wiuh6z",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\adria\\TeamFit\\client\\src\\index.js",[],["87","88"],"C:\\Users\\adria\\TeamFit\\client\\src\\reportWebVitals.js",[],"C:\\Users\\adria\\TeamFit\\client\\src\\App.js",[],"C:\\Users\\adria\\TeamFit\\client\\src\\pages\\Home.js",[],"C:\\Users\\adria\\TeamFit\\client\\src\\components\\Header\\index.js",["89"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Auth from '../../utils/auth';\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n    <header className=\"bg-primary text-light mb-4 py-3 flex-row align-center\">\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\n        <Link className=\"text-light\" to=\"/\">\n          <h1 className=\"m-0\"></h1>\n        </Link>\n        <p className=\"m-0\"></p>\n        <div>\n          {Auth.loggedIn() ? (\n            <>\n              <Link className=\"btn btn-lg btn-primary m-2\" to=\"/me\">\n                View My Profile\n              </Link>\n              <button className=\"btn btn-lg btn-light m-2\" onClick={logout}>\n                Logout\n              </button>\n            </>\n          ) : (\n            <>\n              <Link className=\"btn btn-lg btn-primary m-2\" to=\"/login\">\n                Login\n              </Link>\n              <Link className=\"btn btn-lg btn-light m-2\" to=\"/signup\">\n                Signup\n              </Link>\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","C:\\Users\\adria\\TeamFit\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\adria\\TeamFit\\client\\src\\utils\\queries.js",[],"C:\\Users\\adria\\TeamFit\\client\\src\\components\\CommentList\\index.js",[],"C:\\Users\\adria\\TeamFit\\client\\src\\components\\CommentForm\\index.js",["90"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nconst CommentForm = ({ ChallengeId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: { ChallengeId, commentText },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>Would you like to join this Challenge?</h4>\n      <p\n        className={`m-0 ${\n          characterCount === 280 || error ? 'text-danger' : ''\n        }`}\n      >\n        Character Count: {characterCount}/280\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\n      </p>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-center\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"col-12 col-lg-9\">\n          <textarea\n            name=\"commentText\"\n            placeholder=\"Add your comment...\"\n            value={commentText}\n            className=\"form-input w-100\"\n            style={{ lineHeight: '1.5' }}\n            onChange={handleChange}\n          ></textarea>\n        </div>\n\n        <div className=\"col-12 col-lg-3\">\n          <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n            Add Comment\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CommentForm;\n","C:\\Users\\adria\\TeamFit\\client\\src\\utils\\mutations.js",[],"C:\\Users\\adria\\TeamFit\\client\\src\\pages\\SingleChallenge.js",[],"C:\\Users\\adria\\TeamFit\\client\\src\\components\\ChallengeList\\index.js",[],"C:\\Users\\adria\\TeamFit\\client\\src\\components\\ChallengeForm\\index.js",["91"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_CHALLENGE } from '../../utils/mutations';\nimport { QUERY_CHALLENGES } from '../../utils/queries';\n\nconst ChallengeForm = () => {\n  const [formState, setFormState] = useState({\n    ChallengeText: '',\n    ChallengeAuthor: '',\n  });\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addChallenge, { error }] = useMutation(ADD_CHALLENGE, {\n    update(cache, { data: { addChallenge } }) {\n      try {\n        const { Challenges } = cache.readQuery({ query: QUERY_CHALLENGES });\n\n        cache.writeQuery({\n          query: QUERY_CHALLENGES,\n          data: { Challenges: [addChallenge, ...Challenges] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addChallenge({\n        variables: { ...formState },\n      });\n\n      setFormState({\n        ChallengeText: '',\n        ChallengeAuthor: '',\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'ChallengeText' && value.length <= 280) {\n      setFormState({ ...formState, [name]: value });\n      setCharacterCount(value.length);\n    } else if (name !== 'ChallengeText') {\n      setFormState({ ...formState, [name]: value });\n    }\n  };\n\n  return (\n    <div>\n      <h3>What Challenge would you like to create?</h3>\n\n      <p\n        className={`m-0 ${\n          characterCount === 280 || error ? 'text-danger' : ''\n        }`}\n      >\n        Character Count: {characterCount}/280\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\n      </p>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-center\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"col-12\">\n          <textarea\n            name=\"ChallengeText\"\n            placeholder=\"Here's a new Challenge...\"\n            value={formState.ChallengeText}\n            className=\"form-input w-100\"\n            style={{ lineHeight: '1.5' }}\n            onChange={handleChange}\n          ></textarea>\n        </div>\n        <div className=\"col-12 col-lg-9\">\n          <input\n            name=\"ChallengeAuthor\"\n            placeholder=\"Add your name to get credit for the Challenge...\"\n            value={formState.ChallengeAuthor}\n            className=\"form-input w-100\"\n            onChange={handleChange}\n          />\n        </div>\n\n        <div className=\"col-12 col-lg-3\">\n          <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n            Add Challenge\n          </button>\n        </div>\n        {error && (\n          <div className=\"col-12 my-3 bg-danger text-white p-3\">\n            Something went wrong...\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default ChallengeForm;\n","C:\\Users\\adria\\TeamFit\\client\\src\\pages\\Signup.js",[],"C:\\Users\\adria\\TeamFit\\client\\src\\pages\\Login.js",[],"C:\\Users\\adria\\TeamFit\\client\\src\\utils\\auth.js",[],"C:\\Users\\adria\\TeamFit\\client\\src\\components\\CategoryMenu\\index.js",["92"],"import React, { useEffect } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { useChallengeContext, StoreProvider } from '../../utils/GlobalState';\r\nimport {\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n} from '../../utils/actions';\r\nimport { QUERY_CATEGORIES } from '../../utils/queries';\r\n\r\nfunction CategoryMenu() {\r\n  const [state, dispatch] = useChallengeContext();\r\n\r\n  const { categories } = state;\r\n\r\n  const { data: categoryData } = useQuery(QUERY_CATEGORIES);\r\n\r\n  useEffect(() => {\r\n    if (categoryData) {\r\n      dispatch({\r\n        type: UPDATE_CATEGORIES,\r\n        categories: categoryData.categories,\r\n      });\r\n    }\r\n  }, [categoryData, dispatch]);\r\n\r\n  const handleClick = (id) => {\r\n    dispatch({\r\n      type: UPDATE_CURRENT_CATEGORY,\r\n      currentCategory: id,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Choose a Category:</h2>\r\n      {categories.map((item) => (\r\n        <button\r\n          key={item._id}\r\n          onClick={() => {\r\n            handleClick(item._id);\r\n          }}\r\n        >\r\n          {item.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryMenu;\r\n","C:\\Users\\adria\\TeamFit\\client\\src\\utils\\actions.js",[],"C:\\Users\\adria\\TeamFit\\client\\src\\utils\\GlobalState.js",[],"C:\\Users\\adria\\TeamFit\\client\\src\\utils\\reducers.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":14,"column":11,"nodeType":"99","endLine":14,"endColumn":31},{"ruleId":"100","severity":1,"message":"101","line":16,"column":15,"nodeType":"102","messageId":"103","endLine":16,"endColumn":19},{"ruleId":"100","severity":1,"message":"101","line":33,"column":15,"nodeType":"102","messageId":"103","endLine":33,"endColumn":19},{"ruleId":"100","severity":1,"message":"104","line":3,"column":31,"nodeType":"102","messageId":"103","endLine":3,"endColumn":44},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'StoreProvider' is defined but never used.","no-global-assign","no-unsafe-negation"]